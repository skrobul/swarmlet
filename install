#!/usr/bin/env bash

cat << EOM
——————————————————————————————————————————————————————————————————————————

      _______ _  _  _ _______  ______ _______        _______ _______
      |______ |  |  | |_____| |_____/ |  |  | |      |______    |
      ______| |__|__| |     | |    \  |  |  | |_____ |______    |


       Description:  A small tool to manage swarm deployments,
                     load balancing, SSL, metrics and more.
       Version:      *TODO*
       Author:       Tjerk Woudsma <tjerk@passionatepeople.io>
       Website:      https://swarmlet.dev

——————————————————————————————————————————————————————————————————————————
       Thank you for installing Swarmlet!

EOM

FPREFIX="=====>"
PREFIX="----->"
INDENT="      "

REPOSITORY="https://github.com/swarmlet/swarmlet.git"
DEPENDENCIES=(acl curl git apt-transport-https apache2-utils moreutils)
SWARMLET_INSTALL_ROOT="/opt/swarmlet"

if [ "${BASH_VERSINFO:-0}" -lt 4 ]; then
  echo "$PREFIX [ERROR] Unmet requirements: Bash 4"
  echo "$INDENT Your Bash version is $BASH_VERSION"
  echo "$PREFIX Exiting with error code 1" 1>&2
  exit 1
fi

declare -A DEFAULT_OPTS=(
  [ROOT_DOMAIN]=$HOSTNAME       # (default $HOSTNAME) The domain to use for deployment of included services
  [INSTALLATION_MODE]=full      # (default full, options: full|minimal|bare) .. TODO
  [INSTALL_BRANCH]=master       # (default master) The default branch to install
  [INTERACTIVE]=false           # (default false) Use CLI wizard to setup Swarmlet
  [CREATE_SWAP]=false           # (default false) Allocate 1GB of swap space
  [INSTALL_ZSH]=false           # (default false) Install 'Oh My Zsh'
  [NOOP]=                       # no-op for testing purposes
  # > TODO/FIX:
  # [DEBUG]=                  # (default undefined) Run installation in debug mode
)

# Set default environment variables
for KEY in "${!DEFAULT_OPTS[@]}"; do
  [ ! -z "${DEFAULT_OPTS[$KEY]}" ] && export "$KEY=${DEFAULT_OPTS[$KEY]}";
done

# Set environment variables from arguments if given
shopt -s extglob
while [[ "$#" > 0 ]]; do case "${1%=*}" in
  @($(echo ${!DEFAULT_OPTS[@]} | sed 's/ /|/g'))) export "$1"; shift ;;
  *) echo "Unknown argument: $1"; shift ;;
esac; done

# CLI wizard
# if [ "$INTERACTIVE" == true ]; then
#   echo "Specify the SSH public key to use for git deployments"
#   read -p "(recommended) Press enter to use the default '/root/.ssh/authorized_keys': " GIT_SSH_AUTHORIZED_KEYS
#   export GIT_SSH_AUTHORIZED_KEYS="${GIT_SSH_AUTHORIZED_KEYS:-/root/.ssh/authorized_keys}"

#   read -p "(recommended) Install included services? (Y/N):" INSTALL_INCLUDED_SERVICES
#   echo INSTALL_INCLUDED_SERVICES
#   case $INSTALL_INCLUDED_SERVICES in
#     yes|y|Y) "Install included services" ;;
#     no|n|N) "Don't install included services" ;;
#     *) "[ERROR] Unknown answer, exiting"
#   esac
# fi

set -eo pipefail; [[ $DEBUG ]] && set -x

install() {
  echo "$PREFIX Installing Swarmlet"
  echo "$PREFIX Installing dependencies"
  apt-get update -y -qq
  apt-get install -y -qq "${DEPENDENCIES[@]}"
  wget -nv -O - https://get.docker.com/ | sh
  curl -fsSL "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose

  echo "$PREFIX Cloning Swarmlet from $REPOSITORY"
  git clone -q $REPOSITORY $SWARMLET_INSTALL_ROOT

  if [[ "$INSTALL_BRANCH" != "master" ]]; then
    echo "$PREFIX Checking out $INSTALL_BRANCH"
    pushd $SWARMLET_INSTALL_ROOT >/dev/null
    git checkout "$INSTALL_BRANCH"
    popd >/dev/null
  fi

  if [[ "$INSTALL_ZSH" == "true" ]]; then
    echo "$PREFIX Installing 'Oh My Zsh'"
    apt-get install -y -qq zsh
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended >/dev/null
  fi

  echo "$PREFIX Linking executable"
  ln -s $SWARMLET_INSTALL_ROOT/swarmlet /usr/local/sbin/

  echo "$PREFIX Initializing Swarmlet"
  swarmlet init "$@"

  echo "$PREFIX Installation complete"
  [[ "$INSTALL_ZSH" == "true" ]] && chsh -s $(which zsh) && zsh

  echo "$FPREFIX Server initialized as manager node"
  docker node ls

  echo "$FPREFIX Swarmlet services stacks deployed"
  docker stack ls

  echo "$PREFIX Check the docs on how to configure a domain name for Swarmlet services"
  echo "$INDENT https://swarmlet.dev/docs/getting-started/introduction"
  echo "$PREFIX Please wait a minute or two for Traefik to initialize..."
  echo "$INDENT Follow the logs using:"
  echo "$INDENT $ docker service logs loadbalancer_traefik -f"
}

install
